name: Snyk Container

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  schedule:
    - cron: '18 9 * * 3'

permissions:
  contents: read

jobs:
  snyk:
    permissions:
      contents: read
      security-events: write
      actions: read
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      # Step to install Snyk
      - name: Install Snyk
        run: |
          npm install -g snyk

      # Step to verify Snyk installation
      - name: Verify Snyk installation
        run: snyk --version

      # Step to build Docker image
      - name: Build Docker image
        run: docker build -t rocar18/prueba3:tag .

      # Step to run Snyk to check Docker image for vulnerabilities
      - name: Run Snyk to check Docker image for vulnerabilities and generate SARIF
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        run: |
          # Run Snyk scan and output SARIF to a file
          snyk test --docker rocar18/prueba3:tag --file=Dockerfile --sarif-file=snyk.sarif

      # Step to replace security-severity undefined for license-related findings
      - name: Replace security-severity undefined for license-related findings
        run: sed -i 's/"security-severity":"undefined"/"security-severity":"0"/g' snyk.sarif

      # Step to push Docker image to Docker Hub
      - name: Push Docker image to Docker Hub
        env:
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
        run: |
          echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin
          docker push rocar18/prueba3:tag

      # Step to upload result to GitHub Code Scanning
      - name: Upload result to GitHub Code Scanning
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: snyk.sarif

